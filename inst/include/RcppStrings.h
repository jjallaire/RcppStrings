// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#ifndef RcppStrings_RcppExports_h
#define RcppStrings_RcppExports_h

#include <Rcpp.h>

namespace RcppStrings {

    using namespace Rcpp;

    namespace {
        void validateExported(const std::string& sig) {
            static bool(*p_validateExported)(const std::string&) = Rcpp::GetCppCallable("RcppStrings", "RcppStrings_RcppExports", "RcppExports_validateExported");
            if (!p_validateExported(sig))
                throw Rcpp::function_not_exported("Function '" + sig + "' not found in RcppStrings");
        }
    }

    inline CharacterVector trimAll(CharacterVector input) {
        static CharacterVector(*p_trimAll)(CharacterVector) = NULL;
        if (p_trimAll == NULL) {
            validateExported("CharacterVector(*trimAll)(CharacterVector)");
            p_trimAll = Rcpp::GetCppCallable("RcppStrings", "RcppStrings_RcppExports", "trimAll");
        }
        return p_trimAll(input);
    }

    inline CharacterVector trimLeft(CharacterVector input) {
        static CharacterVector(*p_trimLeft)(CharacterVector) = NULL;
        if (p_trimLeft == NULL) {
            validateExported("CharacterVector(*trimLeft)(CharacterVector)");
            p_trimLeft = Rcpp::GetCppCallable("RcppStrings", "RcppStrings_RcppExports", "trimLeft");
        }
        return p_trimLeft(input);
    }

    inline CharacterVector trimRight(CharacterVector input) {
        static CharacterVector(*p_trimRight)(CharacterVector) = NULL;
        if (p_trimRight == NULL) {
            validateExported("CharacterVector(*trimRight)(CharacterVector)");
            p_trimRight = Rcpp::GetCppCallable("RcppStrings", "RcppStrings_RcppExports", "trimRight");
        }
        return p_trimRight(input);
    }

}

#endif // RcppStrings_RcppExports_h
