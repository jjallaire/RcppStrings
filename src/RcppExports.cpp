// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>
#include <string>
#include <set>

using namespace Rcpp;

// stringTrim
CharacterVector stringTrim(CharacterVector input, std::string side = "both");
RcppExport SEXP RcppStrings_stringTrim(SEXP inputSEXP, SEXP sideSEXP) {
BEGIN_RCPP
    CharacterVector input = Rcpp::as<CharacterVector >(inputSEXP);
    std::string side = Rcpp::as<std::string >(sideSEXP);
    CharacterVector result = stringTrim(input, side);
    return Rcpp::wrap(result);
END_RCPP
}

// validate (ensure exported C++ functions exist before calling them)
static int RcppStrings_RcppExport_validate(const char* sig) { 
    static std::set<std::string> signatures;
    if (signatures.empty()) {
        signatures.insert("CharacterVector(*stringTrim)(CharacterVector,std::string)");
    }
    return signatures.find(sig) != signatures.end();
}

// registerCCallable (register entry points for exported C++ functions)
RcppExport SEXP RcppStrings_RcppExport_registerCCallable() { 
    R_RegisterCCallable("RcppStrings", "RcppStrings_stringTrim", (DL_FUNC)RcppStrings_stringTrim);
    R_RegisterCCallable("RcppStrings", "RcppStrings_RcppExport_validate", (DL_FUNC)RcppStrings_RcppExport_validate);
    return R_NilValue;
}
